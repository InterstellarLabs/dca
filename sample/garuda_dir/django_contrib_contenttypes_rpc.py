# DO NOT EDIT THIS FILE MANUALLY
# THIS FILE IS AUTO-GENERATED
# MANUAL CHANGES WILL BE DISCARDED
# PLEASE READ GARUDA DOCS
from garuda_dir.garuda_pb2 import ContentType, Void  # NOQA
from garuda_dir.django_contrib_contenttypes_crud import (  # NOQA
    read_contenttype,
    delete_contenttype,
    create_contenttype,
    update_contenttype,
    read_contenttypes_filter,
)


def contenttype_to_dict(obj):
    # Cycle through fields directly
    d = {  }
    if obj is None:
        return d
    is_dj_obj = obj.__module__.endswith('models')
    foriegn_keys = []
    for field in ['app_label', 'id', 'model']:  # NOQA
        value = getattr(obj, field, None)
        if field in [None, 'None']:
            continue
        d[field] = value
        if is_dj_obj and (field == 'id' or field in foriegn_keys):
            d[field] = str(value)
        elif is_dj_obj and field in ['created_on', 'updated_on']:
            d[field] = value.isoformat()
    return d


class ContentTypeGaruda:

    def ReadContentTypesFilter(self, void, context):
        objs = read_contenttypes_filter()
        return [ContentType(
            **contenttype_to_dict(obj)) for obj in objs]

    def ReadContentType(self, id, context):
        obj = read_contenttype(id=id.id)
        return ContentType(**contenttype_to_dict(obj))

    def CreateContentType(self, obj, context):
        obj = create_contenttype(**contenttype_to_dict(obj))
        return ContentType(**contenttype_to_dict(obj))

    def UpdateContentType(self, obj, context):
        obj_dict = contenttype_to_dict(obj)
        del obj_dict['id']
        obj = update_contenttype(obj.id, **obj_dict)
        return Void()

    def DeleteContentType(self, id, context):
        delete_contenttype(id.id)
        return Void()